batch_job_instance : 스프링 배치를 돌릴때 Job Parameter에 따라 생성되는 테이블

batch_job_execution : 스프링 배치의 결과를 담고 있다 instance 테이블의 실패/성공 여부 및 실패시의 로그메시지를 담고 있음

batch_job_execution_params : batch_job_execution에서 넣은 파라미터 정보를 알 수 있다

batch_job_execution 테이블에서 EXIT_CODE가 NOOP은 JobParameters를 설정하지 않고, 중복해서 Job을 실행할 경우 위와 같이 NOOP이라는 종료 코드와 함께 작업이 종료됩니다.

batchStatus : Job 또는 Step의 실행 결과를 Spring에서 기록할 때 사용하는 값

exitStatus :  Step의 실행 후 상태를 얘기합니다. (on 체인에서 사용하는 값)
-> Spring Batch는 기본적으로 ExitStatus의 exitCode는 Step의 BatchStatus와 같도록 설정이 되어 있습니다.

Decide를 사용하지 않고 .on과 .to를 활용하여 Step의 실행 순서를 변경하는 경우 스텝에서 처리해야할 로직외에 ExitStatus를 지정하는 코드도 추가해야 하며
또한 사용자 정의 ExitStatus가 필요할 때마다 리스너를 만드는 방식으로 해야하므로 비효율적이다
-> 참고로 Decide는 어디로 가야할지 흐름만 정해주는 스텝 부분만 존재하는 것이라고 생각하면 된다